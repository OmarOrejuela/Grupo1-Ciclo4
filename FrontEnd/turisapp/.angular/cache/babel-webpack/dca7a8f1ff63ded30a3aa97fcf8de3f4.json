{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/Personal/Documents/GitHub/Grupo1-Ciclo4/FrontEnd/turisapp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class SitioService {\n  constructor(http) {\n    this.http = http;\n    this.URL_BASE = environment.API_URL;\n  }\n\n  InsertRecord(data) {\n    return this.http.post(`${this.URL_BASE}sitios`, data);\n  }\n\n  UpdateRecord(data, id) {\n    return this.http.put(`${this.URL_BASE}sitios/${id}`, data);\n  }\n\n  DeleteRecord(id) {\n    return this.http.delete(`${this.URL_BASE}sitios/${id}`);\n  }\n\n  SearchRecord(id) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      const response = yield fetch(`${_this.URL_BASE}sitios/${id}`);\n      return yield response.json();\n    })();\n  }\n\n  LisrRecord() {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      const response = yield fetch(`${_this2.URL_BASE}sitios`);\n      return yield response.json();\n    })();\n  }\n\n}\n\nSitioService.ɵfac = function SitioService_Factory(t) {\n  return new (t || SitioService)(i0.ɵɵinject(i1.HttpClient));\n};\n\nSitioService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: SitioService,\n  factory: SitioService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"sources":["C:/Users/Personal/Documents/GitHub/Grupo1-Ciclo4/FrontEnd/turisapp/src/app/services/sitio.service.ts"],"names":["environment","i0","i1","SitioService","constructor","http","URL_BASE","API_URL","InsertRecord","data","post","UpdateRecord","id","put","DeleteRecord","delete","SearchRecord","response","fetch","json","LisrRecord","ɵfac","SitioService_Factory","t","ɵɵinject","HttpClient","ɵprov","ɵɵdefineInjectable","token","factory","providedIn"],"mappings":";AAAA,SAASA,WAAT,QAA4B,8BAA5B;AACA,OAAO,KAAKC,EAAZ,MAAoB,eAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,sBAApB;AACA,OAAO,MAAMC,YAAN,CAAmB;AACtBC,EAAAA,WAAW,CAACC,IAAD,EAAO;AACd,SAAKA,IAAL,GAAYA,IAAZ;AACA,SAAKC,QAAL,GAAgBN,WAAW,CAACO,OAA5B;AACH;;AACDC,EAAAA,YAAY,CAACC,IAAD,EAAO;AACf,WAAO,KAAKJ,IAAL,CAAUK,IAAV,CAAgB,GAAE,KAAKJ,QAAS,QAAhC,EAAyCG,IAAzC,CAAP;AACH;;AACDE,EAAAA,YAAY,CAACF,IAAD,EAAOG,EAAP,EAAW;AACnB,WAAO,KAAKP,IAAL,CAAUQ,GAAV,CAAe,GAAE,KAAKP,QAAS,UAASM,EAAG,EAA3C,EAA8CH,IAA9C,CAAP;AACH;;AACDK,EAAAA,YAAY,CAACF,EAAD,EAAK;AACb,WAAO,KAAKP,IAAL,CAAUU,MAAV,CAAkB,GAAE,KAAKT,QAAS,UAASM,EAAG,EAA9C,CAAP;AACH;;AACKI,EAAAA,YAAY,CAACJ,EAAD,EAAK;AAAA;;AAAA;AACnB,YAAMK,QAAQ,SAASC,KAAK,CAAE,GAAE,KAAI,CAACZ,QAAS,UAASM,EAAG,EAA9B,CAA5B;AACA,mBAAaK,QAAQ,CAACE,IAAT,EAAb;AAFmB;AAGtB;;AACKC,EAAAA,UAAU,GAAG;AAAA;;AAAA;AACf,YAAMH,QAAQ,SAASC,KAAK,CAAE,GAAE,MAAI,CAACZ,QAAS,QAAlB,CAA5B;AACA,mBAAaW,QAAQ,CAACE,IAAT,EAAb;AAFe;AAGlB;;AArBqB;;AAuB1BhB,YAAY,CAACkB,IAAb,GAAoB,SAASC,oBAAT,CAA8BC,CAA9B,EAAiC;AAAE,SAAO,KAAKA,CAAC,IAAIpB,YAAV,EAAwBF,EAAE,CAACuB,QAAH,CAAYtB,EAAE,CAACuB,UAAf,CAAxB,CAAP;AAA6D,CAApH;;AACAtB,YAAY,CAACuB,KAAb,GAAqB,aAAczB,EAAE,CAAC0B,kBAAH,CAAsB;AAAEC,EAAAA,KAAK,EAAEzB,YAAT;AAAuB0B,EAAAA,OAAO,EAAE1B,YAAY,CAACkB,IAA7C;AAAmDS,EAAAA,UAAU,EAAE;AAA/D,CAAtB,CAAnC","sourcesContent":["import { environment } from 'src/environments/environment';\r\nimport * as i0 from \"@angular/core\";\r\nimport * as i1 from \"@angular/common/http\";\r\nexport class SitioService {\r\n    constructor(http) {\r\n        this.http = http;\r\n        this.URL_BASE = environment.API_URL;\r\n    }\r\n    InsertRecord(data) {\r\n        return this.http.post(`${this.URL_BASE}sitios`, data);\r\n    }\r\n    UpdateRecord(data, id) {\r\n        return this.http.put(`${this.URL_BASE}sitios/${id}`, data);\r\n    }\r\n    DeleteRecord(id) {\r\n        return this.http.delete(`${this.URL_BASE}sitios/${id}`);\r\n    }\r\n    async SearchRecord(id) {\r\n        const response = await fetch(`${this.URL_BASE}sitios/${id}`);\r\n        return await response.json();\r\n    }\r\n    async LisrRecord() {\r\n        const response = await fetch(`${this.URL_BASE}sitios`);\r\n        return await response.json();\r\n    }\r\n}\r\nSitioService.ɵfac = function SitioService_Factory(t) { return new (t || SitioService)(i0.ɵɵinject(i1.HttpClient)); };\r\nSitioService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: SitioService, factory: SitioService.ɵfac, providedIn: 'root' });\r\n"]},"metadata":{},"sourceType":"module"}